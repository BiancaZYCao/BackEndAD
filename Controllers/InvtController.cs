using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using BackEndAD.Models;
using BackEndAD.ServiceInterface;
using BackEndAD.DataContext;
using BackEndAD.ServiceInterface;
using System.Text.RegularExpressions;

//REMINDER: All existing comments generated by BiancaZYCao
//This is an simple example about how to code Web API controller return data result for ReactJS
//
namespace BackEndAD.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class InvtController : ControllerBase
    {

        private IStoreClerkService _clkService;

        public InvtController(IStoreClerkService clkService)
        {
            _clkService = clkService;
        }

        // CONTROLLER METHODS handling each HTTP get/put/post/request 
        // GET: api/Dept
        [HttpGet]
        public async Task<ActionResult<List<Department>>> GetAllStationeries()
        {
            var result = await _clkService.findAllInventoriesAsync();
            // if find data then return result else will return a String says Department not found
            if (result != null)
                //Docs says that Ok(...) will AUTO TRANSFER result into JSON Type
                return Ok(result);
            else
                return NotFound("Stationeries not found");
        }


        [HttpGet("{id}")]
        public async Task<ActionResult<Department>> GetStationeryByIdAsync(int id)
        {
            var result = await _clkService.findInventoryByIdAsync(id);
            // if find data then return result else will return a String says Department not found
            if (result != null)
                return Ok(result);
            else
                return NotFound("Stationery not found");
        }

    }
}